<UserControl 
    x:Class="SMART.Gui.Controls.DiagramControl.View.DiagramViewer"
    Name="diagramViewer"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:View1="clr-namespace:SMART.Gui.Controls.DiagramControl.View"
    xmlns:Controls="clr-namespace:SMART.Gui.Controls"    
    >

    <UserControl.Resources>

        <!-- animation when zoom area fades in -->
        <Storyboard x:Key="FadeInAnimation">
            <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0.9" Duration="0:0:0.5" />
        </Storyboard>

        <!-- animation when zoom area fades out -->
        <Storyboard x:Key="FadeOutAnimation">
            <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0.3" Duration="0:0:0.5" />
        </Storyboard>
        <!-- zoom slider -->

        <!-- zoom area -->
        <Style x:Key="ZoomAreaStyle" TargetType="{x:Type StackPanel}">
            <Setter Property="Opacity" Value=".3" />
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Setter Property="Margin" Value="0,0,50,50" />
            <Style.Triggers>
                <EventTrigger RoutedEvent="MouseEnter">
                    <EventTrigger.Actions>
                        <BeginStoryboard Storyboard="{StaticResource FadeInAnimation}" />
                    </EventTrigger.Actions>
                </EventTrigger>
                <EventTrigger RoutedEvent="MouseLeave">
                    <EventTrigger.Actions>
                        <BeginStoryboard Storyboard="{StaticResource FadeOutAnimation}" />
                    </EventTrigger.Actions>
                </EventTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ZoomSliderStyle" TargetType="{x:Type Slider}">
            <Setter Property="Width" Value="20" />
            <Setter Property="Height" Value="70" />
            <Setter Property="Cursor" Value="Arrow" />
            <Setter Property="Orientation" Value="Vertical" />
            <Setter Property="TickPlacement" Value="None" />
            <Setter Property="SmallChange" Value="0.1" />
            <Setter Property="LargeChange" Value=".25" />
            <Setter Property="Maximum" Value="5" />
            <Setter Property="Minimum" Value=".1" />
            <Setter Property="IsSnapToTickEnabled" Value="False" />
        </Style>

        <!-- zoom label -->
        <Style x:Key="ZoomLabelStyle" TargetType="{x:Type Label}">
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Foreground" Value="White" />
        </Style>

        <!-- slider border -->
        <Style x:Key="SliderBorderStyle" TargetType="{x:Type Border}">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="CornerRadius" Value="10" />
            <Setter Property="Background" Value="#80000000" />
            <Setter Property="BorderBrush" Value="#80ffffff" />
            <Setter Property="Padding" Value="7" />
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.Resources>

            <Storyboard x:Key="InTransition">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.20833317935466766"/>
                    <SplineDoubleKeyFrame KeyTime="00:00:00.11" Value="0.05"/>
                    <SplineDoubleKeyFrame KeySpline="0,0.495999991893768,0.504000008106232,1" KeyTime="00:00:00.22" Value="0.05"/>
                    <SplineDoubleKeyFrame KeySpline="0,0.500999987125397,0.504000008106232,1" KeyTime="00:00:0.44" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.Visibility)">
                    <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                    <SplineDoubleKeyFrame KeyTime="00:00:00.11" Value="0"/>
                    <SplineDoubleKeyFrame KeySpline="0,0.495999991893768,0.504000008106232,1" KeyTime="00:00:00.22" Value="1"/>
                    <SplineDoubleKeyFrame KeySpline="0,0.500999987125397,0.504000008106232,1" KeyTime="00:00:00.44" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>

            <Style x:Key="GlassMenu" TargetType="{x:Type ContextMenu}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ContextMenu}">
                            <Grid x:Name="border" RenderTransformOrigin="0.5,0.5">
                                <Grid.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                    </TransformGroup>
                                </Grid.RenderTransform>
                                <!-- Background Layer -->
                                <Ellipse Fill="{TemplateBinding Background}"/>
                                <!-- Refraction Layer -->
                                <Ellipse x:Name="RefractionLayer">
                                    <Ellipse.Fill>
                                        <RadialGradientBrush GradientOrigin="0.496,1.052">
                                            <RadialGradientBrush.RelativeTransform>
                                                <TransformGroup>
                                                    <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                                    <TranslateTransform X="0.02" Y="0.3"/>
                                                </TransformGroup>
                                            </RadialGradientBrush.RelativeTransform>
                                            <GradientStop Offset="1" Color="#00000000"/>
                                            <GradientStop Offset="0.4" Color="#FFFFFFFF"/>
                                        </RadialGradientBrush>
                                    </Ellipse.Fill>
                                </Ellipse>
                                <!-- Reflection Layer -->
                                <Path x:Name="ReflectionLayer" VerticalAlignment="Top" HorizontalAlignment="Stretch" Stretch="Fill">
                                    <Path.RenderTransform>
                                        <ScaleTransform ScaleY="0.5" />
                                    </Path.RenderTransform>
                                    <Path.Data>
                                        <PathGeometry>
                                            <PathFigure IsClosed="True" StartPoint="98.999,45.499">
                                                <BezierSegment Point1="98.999,54.170" Point2="89.046,52.258" Point3="85.502,51.029"/>
                                                <BezierSegment
                                    IsSmoothJoin="True"
                                    Point1="75.860,47.685"
                                    Point2="69.111,45.196"
                                    Point3="50.167,45.196"/>
                                                <BezierSegment Point1="30.805,45.196" Point2="20.173,47.741" Point3="10.665,51.363"/>
                                                <BezierSegment
                                    IsSmoothJoin="True"
                                    Point1="7.469,52.580"
                                    Point2="1.000,53.252"
                                    Point3="1.000,44.999"/>
                                                <BezierSegment Point1="1.000,39.510" Point2="0.884,39.227" Point3="2.519,34.286"/>
                                                <BezierSegment
                                    IsSmoothJoin="True"
                                    Point1="9.106,14.370"
                                    Point2="27.875,0"
                                    Point3="50,0"/>
                                                <BezierSegment Point1="72.198,0" Point2="91.018,14.466" Point3="97.546,34.485"/>
                                                <BezierSegment
                                    IsSmoothJoin="True"
                                    Point1="99.139,39.369"
                                    Point2="98.999,40.084"
                                    Point3="98.999,45.499"/>
                                            </PathFigure>
                                        </PathGeometry>
                                    </Path.Data>
                                    <Path.Fill>
                                        <RadialGradientBrush GradientOrigin="0.498,0.526">
                                            <RadialGradientBrush.RelativeTransform>
                                                <TransformGroup>
                                                    <ScaleTransform
                                       CenterX="0.5"
                                       CenterY="0.5"
                                       ScaleX="1"
                                       ScaleY="1.997"/>
                                                    <TranslateTransform X="0" Y="0.5"/>
                                                </TransformGroup>
                                            </RadialGradientBrush.RelativeTransform>
                                            <GradientStop Offset="1" Color="#FFFFFFFF"/>
                                            <GradientStop Offset="0.85" Color="#92FFFFFF"/>
                                            <GradientStop Offset="0" Color="#00000000"/>
                                        </RadialGradientBrush>
                                    </Path.Fill>
                                </Path>
                                <!-- ContentPresenter -->
                                <ContentPresenter Margin="0,2,0,0" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <ContentPresenter.Content>
                                        <Controls:RadialPanel IsItemsHost="true" 
                                                              Width="{TemplateBinding Width}" 
                                                              Height="{TemplateBinding Height}"
                                                              HorizontalAlignment="Stretch" 
                                                              VerticalAlignment="Stretch"/>
                                    </ContentPresenter.Content>
                                </ContentPresenter>
                            </Grid>

                            <ControlTemplate.Triggers>
                                <EventTrigger RoutedEvent="ContextMenu.Opened" >
                                    <BeginStoryboard Storyboard="{StaticResource InTransition}"/>
                                </EventTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="glassMenuItem" TargetType="{x:Type MenuItem}">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Margin" Value="10,10,10,10" />
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <Button x:Name="button" Command="{TemplateBinding Command}" ToolTip="{TemplateBinding ToolTip}" RenderTransformOrigin="0.5,0.5" >
                                <Button.RenderTransform>
                                    <ScaleTransform />
                                </Button.RenderTransform>
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                        <Setter Property="Template" >
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <Image SnapsToDevicePixels="True"
                                                        Source="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type MenuItem}}, Path=Header}" 
                                                        MaxHeight="16"  />
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <ControlTemplate.Triggers>
                                <EventTrigger RoutedEvent="UIElement.MouseEnter" >                                    
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation From="1" To="2" Duration="00:00:00.25"
                                                             Storyboard.TargetName="button" 
                                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" />
                                                <DoubleAnimation From="1" To="2" Duration="00:00:00.25"
                                                             Storyboard.TargetName="button" 
                                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" />
                                            </Storyboard>
                                        </BeginStoryboard>                                    
                                </EventTrigger>
                                <EventTrigger RoutedEvent="UIElement.MouseLeave" >
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation From="2" To="1" Duration="00:00:00.25"
                                                             Storyboard.TargetName="button" 
                                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" />
                                            <DoubleAnimation From="2" To="1" Duration="00:00:00.25"
                                                             Storyboard.TargetName="button" 
                                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </Grid.Resources>

        <!--<Grid.ContextMenu>
            <ContextMenu 
                Background="SteelBlue"
                Style="{StaticResource GlassMenu}" 
                Placement="Mouse"
                Width="150"
                Height="150"
                StaysOpen="False"
                HorizontalOffset="-75"
                VerticalOffset="-75">
                <MenuItem Command="Commands:SmartCommands.ZoomAll" ToolTip="Zoom all" Header="/Resources/Images/Model.png" />
                <MenuItem Command="Commands:SmartCommands.ZoomRect" ToolTip="Zoom rectangle" Header="/Resources/Images/ZoomRect.png" />
                <MenuItem Header="Create states and transitions" />
                <MenuItem Header="Nearest neighbour" />
            </ContextMenu>
        </Grid.ContextMenu>-->
        
        <!--<ScrollViewer x:Name="scrollViewer" 
                      HorizontalScrollBarVisibility="Visible" 
                      Template="{StaticResource SMARTScrollTemplate}"
                      VerticalScrollBarVisibility="Visible">
            <Grid x:Name="grid">            -->
        <View1:DiagramView 
                Background="{Binding ElementName=diagramViewer, Path=Background}"
                x:Name="diagramView"                 
                ItemsSource="{Binding IsAsync=False, Path=DiagramItems}"  />
        <!--</Grid>
        </ScrollViewer>
        
        <StackPanel Style="{StaticResource ZoomAreaStyle}" x:Name="ZoomSliderPanel" >
            <Border Style="{StaticResource SliderBorderStyle}">
                <StackPanel>
                    <Slider Style="{StaticResource ZoomSliderStyle}" x:Name="ZoomSlider" />
                    <Label Style="{StaticResource ZoomLabelStyle}">Zoom</Label>
                </StackPanel>
            </Border>
        </StackPanel>-->
        <!--"{Binding ElementName=diagramViewer, Path=Background}"-->
    </Grid>
</UserControl>
