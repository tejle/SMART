<View:ViewBase 
    x:Class="SMART.Gui.Controls.DiagramControl.Shapes.TransitionShape"
    x:Name="transitionShape"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Controls="clr-namespace:SMART.Gui.Controls"
    xmlns:View="clr-namespace:SMART.Gui.View"
    xmlns:Shapes="clr-namespace:SMART.Gui.Controls.DiagramControl.Shapes"
    >

    <ContentControl.Resources>

        <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />
        <SolidColorBrush x:Key="DefectBrush" Color="Red" />
        <SolidColorBrush x:Key="CurrentBrush" Color="SteelBlue" />

        <Storyboard x:Key="TransitionFadeInCurrentAnimation">
            <ColorAnimation Storyboard.TargetName="PART_ConnectionPath" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" Duration="0:0:0.05" To="SteelBlue" />
            <ColorAnimation Storyboard.TargetName="PART_SinkAnchorPath" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" Duration="0:0:0.05" To="SteelBlue" />
        </Storyboard>

        <Storyboard x:Key="TransitionFadeOutCurrentAnimation">
            <ColorAnimation Storyboard.TargetName="PART_ConnectionPath" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" Duration="0:0:1.0" To="#888" />
            <ColorAnimation Storyboard.TargetName="PART_SinkAnchorPath" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" Duration="0:0:1.0" To="#888" />
        </Storyboard>

        <!-- Style for the ConnectorAdorner thumbs -->
        <Style x:Key="ConnectionAdornerThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Width" Value="12"/>
            <Setter Property="Height" Value="12"/>
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <TranslateTransform X="-6" Y="-6"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Rectangle Fill="#AADCDCDC" Stroke="DodgerBlue" StrokeThickness="1" RadiusX="0" RadiusY="0"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Arrow Grid Style -->
        <Style x:Key="ArrowGridStyle" TargetType="Grid">
            <Setter Property="Width" Value="10"/>
            <Setter Property="Height" Value="10"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <TranslateTransform X="-5" Y="-5"/>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- base style for all arrow shapes -->
        <Style x:Key="ArrowSymbolBaseStyle" TargetType="Path">
            <Setter Property="Fill" Value="{StaticResource SolidBorderBrush}"/>
            <Setter Property="Stretch" Value="Fill"/>
        </Style>
        <!-- Arrow -->
        <Style x:Key="Arrow" TargetType="Path" BasedOn="{StaticResource ArrowSymbolBaseStyle}">
            <Setter Property="Data" Value="M0,0 8,4 0,8 Z"/>
        </Style>
        <!-- Diamond  -->
        <Style x:Key="Diamond" TargetType="Path" BasedOn="{StaticResource ArrowSymbolBaseStyle}">
            <Setter Property="Data" Value="M-5,0 0,-5 5,0 0,5 Z"/>
        </Style>

    </ContentControl.Resources>

    <ContentControl.Style>
        <Style TargetType="{x:Type Shapes:TransitionShape}">
            <Setter Property="Template">
                <Setter.Value>

                    <ControlTemplate TargetType="{x:Type Shapes:TransitionShape}">

                        <Canvas >
                            <Canvas.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="{Binding Path=Rename.Text}" Command="{Binding Path=Rename}" CommandParameter="{Binding}" >
                                        <MenuItem.Icon>
                                            <Image Source="{Binding Path=Rename.Icon}" MaxHeight="16" MaxWidth="16" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <Separator />
                                    <MenuItem Header="{Binding Path=Delete.Text}" Command="{Binding Path=Delete}" CommandParameter="{Binding}" >
                                        <MenuItem.Icon>
                                            <Image Source="{Binding Delete.Icon}" MaxHeight="16" MaxWidth="16" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                </ContextMenu>
                            </Canvas.ContextMenu>

                            <Path Name="PART_ConnectionPath"                              
                              StrokeThickness="2"
                              Stroke="{StaticResource SolidBorderBrush}"
                              StrokeStartLineCap="Round"
                              StrokeEndLineCap="Round"
                              StrokeLineJoin="Round"
                              StrokeDashArray="{Binding ElementName=transitionShape, Path=StrokeDashArray}"
                              SnapsToDevicePixels="True"
                              Data="{Binding ElementName=transitionShape, Path=PathGeometry}">
                            </Path>
                            <Grid Name="PART_GridAnchorPositionSource" 
                                Style="{StaticResource ArrowGridStyle}"               
                                Canvas.Left="{Binding ElementName=transitionShape, Path=AnchorPositionSource.X}"
                                Canvas.Top="{Binding ElementName=transitionShape, Path=AnchorPositionSource.Y}">
                                <Path Name="PART_SourceAnchorPath"/>
                                <Grid.LayoutTransform>
                                    <RotateTransform Angle="{Binding ElementName=transitionShape, Path=AnchorAngleSource}"/>
                                </Grid.LayoutTransform>
                            </Grid>
                            <Grid Name="PART_GridAnchorPositionSink" 
                                Style="{StaticResource ArrowGridStyle}"              
                                Canvas.Left="{Binding ElementName=transitionShape, Path=AnchorPositionSink.X}"
                                Canvas.Top="{Binding ElementName=transitionShape, Path=AnchorPositionSink.Y}">
                                <Path Name="PART_SinkAnchorPath" Style="{StaticResource Arrow}"/>
                                <Grid.LayoutTransform>
                                    <RotateTransform Angle="{Binding ElementName=transitionShape, Path=AnchorAngleSink}"/>
                                </Grid.LayoutTransform>
                            </Grid>

                            <TextBlock x:Name="PART_TextBlock" 
                                       MaxWidth="175"
                                       TextTrimming="CharacterEllipsis"
                                       Text="{Binding LabelAndParameters}"                   
                                       ToolTip="{Binding LabelAndParameters}"
                                       Canvas.Left="{Binding ElementName=transitionShape, Path=LabelPosition.X}"
                                       Canvas.Top="{Binding ElementName=transitionShape, Path=LabelPosition.Y}">
                              <TextBlock.RenderTransform>
                                <TranslateTransform X="5" Y="5"/>
                              </TextBlock.RenderTransform>
                            </TextBlock>

                            <TextBox 
                                    x:Name="PART_TextBox"
                                    MaxWidth="175"
                                    Text="{Binding Path=Name}" 
                                    Canvas.Left="{Binding ElementName=transitionShape, Path=LabelPosition.X}"
                                    Canvas.Top="{Binding ElementName=transitionShape, Path=LabelPosition.Y}"                                    
                                    HorizontalAlignment="Center" VerticalAlignment="Center"
                                    Visibility="Collapsed" Controls:SelectableTextBox.SelectAllOnInput="True" >
                                <TextBox.RenderTransform>
                                    <TranslateTransform X="5" Y="5"/>
                                </TextBox.RenderTransform>                                
                            </TextBox>

                            <TextBlock x:Name="PART_visitCounter" 
                                        Canvas.Left="{Binding ElementName=transitionShape, Path=LabelPosition.X}"
                                        Canvas.Top="{Binding ElementName=transitionShape, Path=LabelPosition.Y}"
                                        Margin="0,-10,0,0" 
                                        Visibility="Collapsed"
                                        Text="{Binding VisitCount}" >
                            <TextBlock.RenderTransform>
                                <TranslateTransform X="5" Y="5"/>
                            </TextBlock.RenderTransform>
                            </TextBlock>

                        </Canvas>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding ShowVisitCounter}" Value="true">
                                <Setter TargetName="PART_visitCounter" Property="Visibility" Value="Visible" />
                            </DataTrigger>

                            <DataTrigger Binding="{Binding VisitCount}" Value="-1">
                                <Setter TargetName="PART_visitCounter" Property="Visibility" Value="Collapsed" />
                                <!--<Setter TargetName="PART_ConnectionPath" Property="Stroke" Value="{StaticResource SolidBorderBrush}" />
                                <Setter TargetName="PART_SinkAnchorPath" Property="Fill" Value="{StaticResource SolidBorderBrush}" />-->
                            </DataTrigger>

                            <DataTrigger Binding="{Binding VisitCount}" Value="0">
                                <Setter TargetName="PART_ConnectionPath" Property="Stroke" Value="Gray" />
                                <Setter TargetName="PART_SinkAnchorPath" Property="Fill" Value="Gray" />
                            </DataTrigger>

                            <MultiDataTrigger >
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsVisited}" Value="True" />
                                    <Condition Binding="{Binding IsDefect}" Value="False" />
                                    <Condition Binding="{Binding IsCurrent}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="PART_ConnectionPath" Property="Stroke" Value="LimeGreen" />
                                <Setter TargetName="PART_SinkAnchorPath" Property="Fill" Value="LimeGreen" />
                            </MultiDataTrigger>
                            
                            <DataTrigger Binding="{Binding IsCurrent}" Value="true">
                                <!--<DataTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource TransitionFadeInCurrentAnimation}" />
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource TransitionFadeOutCurrentAnimation}" />
                                </DataTrigger.ExitActions>-->
                                <Setter TargetName="PART_ConnectionPath" Property="Stroke" Value="SteelBlue" />
                                <Setter TargetName="PART_SinkAnchorPath" Property="Fill" Value="SteelBlue" />
                            </DataTrigger>
                            
                            <DataTrigger Binding="{Binding Selected}" Value="True" >
                                <Setter TargetName="PART_ConnectionPath" Property="Stroke" Value="DodgerBlue" />
                            </DataTrigger> 
                            
                            <MultiDataTrigger >
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsDefect}" Value="True" />
                                    <Condition Binding="{Binding IsCurrent}" Value="False" /> 
                                </MultiDataTrigger.Conditions>
                                
                                <Setter TargetName="PART_ConnectionPath" Property="Stroke" Value="Red" />
                                <Setter TargetName="PART_SinkAnchorPath" Property="Fill" Value="Red" />
                            </MultiDataTrigger>
                            
                            <DataTrigger Binding="{Binding IsDimmed}" Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation 
                                            Storyboard.TargetName="PART_ConnectionPath" Storyboard.TargetProperty="Opacity" Duration="0:0:0.5" To="0.5" />
                                            <DoubleAnimation 
                                            Storyboard.TargetName="PART_SinkAnchorPath" Storyboard.TargetProperty="Opacity" Duration="0:0:0.5" To="0.5" />
                                            <ColorAnimation 
                                            Storyboard.TargetName="PART_ConnectionPath" Storyboard.TargetProperty="(Stroke).(SolidColorBrush.Color)" Duration="0:0:0.5" To="LightGray" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation 
                                            Storyboard.TargetName="PART_ConnectionPath" Storyboard.TargetProperty="Opacity" Duration="0:0:0.5" To="1.0" />
                                            <DoubleAnimation 
                                            Storyboard.TargetName="PART_SinkAnchorPath" Storyboard.TargetProperty="Opacity" Duration="0:0:0.5" To="1.0" />
                                            <ColorAnimation 
                                            Storyboard.TargetName="PART_ConnectionPath" Storyboard.TargetProperty="(Stroke).(SolidColorBrush.Color)" Duration="0:0:0.5" To="#888" />
                                        </Storyboard>
                                    </BeginStoryboard>

                                </DataTrigger.ExitActions>
                                <Setter TargetName="PART_TextBlock" Property="Opacity" Value="0.5" />
                            </DataTrigger>

                            <DataTrigger Binding="{Binding IsInEditMode}" Value="True">
                                <Setter TargetName="PART_TextBlock" Property="Visibility" Value="Collapsed" />
                                <Setter TargetName="PART_TextBox" Property="Visibility" Value="Visible" />
                                <!--<Setter TargetName="PART_ParameterPopup" Property="Visibility" Value="Visible" />-->
                                <Setter TargetName="PART_TextBox" Property="FocusManager.FocusedElement" Value="{Binding ElementName=PART_TextBox}" />
                            </DataTrigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </ContentControl.Style>
</View:ViewBase>
