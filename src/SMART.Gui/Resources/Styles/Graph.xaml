<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Gui="clr-namespace:SMART.Gui"
    xmlns:Controls="clr-namespace:SMART.Gui.Controls"
    xmlns:Diagram="clr-namespace:Syncfusion.Windows.Diagram;assembly=Syncfusion.Diagram.WPF"
    xmlns:Converters="clr-namespace:SMART.Gui.Converters"
    xmlns:Model="clr-namespace:SMART.Core.DomainModel;assembly=SMART.Core"
    xmlns:ComponentModel="clr-namespace:System.ComponentModel;assembly=System"
    xmlns:SfControls="clr-namespace:Syncfusion.Windows.Tools.Controls;assembly=Syncfusion.Tools.WPF">
    
    <Style x:Key="ShinyContentPresenter" TargetType="{x:Type ContentControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Grid>
                        <Rectangle x:Name="GelBackground" Opacity="1" RadiusX="9" RadiusY="9" Fill="{TemplateBinding Background}" StrokeThickness="0.35">
                            <Rectangle.Stroke>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="white" Offset="0" />
                                            <GradientStop Color="#666666" Offset="1" />
                                        </GradientStopCollection>
                                    </GradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Rectangle.Stroke>
                        </Rectangle>
                        <Rectangle x:Name="GelShine" Margin="2,2,2,0" VerticalAlignment="top" RadiusX="6" RadiusY="6" Opacity="1" Stroke="transparent" Height="15px">
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="#ccffffff" Offset="0" />
                                            <GradientStop Color="transparent" Offset="1" />
                                        </GradientStopCollection>
                                    </GradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Border Margin="5">
                            <ContentPresenter/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type Diagram:LabelEditor}">
        <Setter Property="FontSize" Value="14" />
    </Style>

    <Style TargetType="{x:Type Controls:SmartNode}" x:Key="{x:Type Controls:SmartNode}" >
        <Style.Triggers>
            <Trigger Property="IsCurrent" Value="True" >
                <Setter Property="Background" Value="LightSteelBlue" />
            </Trigger>
            <Trigger Property="IsVisited" Value="True" >
                <Setter Property="Background" Value="GreenYellow" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="MinWidth" Value="175" />
        <Setter Property="MinHeight" Value="50" />
        <Setter Property="Width" Value="175" />
        <Setter Property="Height" Value="50" />
        <Setter Property="LabelVerticalAlignment" Value="Center" />
        <Setter Property="LabelHorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Background" Value="Orange" />
        <!--<Setter Property="ContextMenu" Value="{StaticResource NodeContextMenu}" />-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:SmartNode}">
                    <Border Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" IsHitTestVisible="true" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0">
                        <Border.ContextMenu>
                            <ContextMenu DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Parent.DataContext}">
                                <!--<MenuItem Header="{Binding RelativeSource={RelativeSource Self},Path=Command.Text}" Command="{x:Static Controls:SmartNode.SetNormalType}" CommandParameter="{Binding}"/>
                                <MenuItem Header="{Binding RelativeSource={RelativeSource Self},Path=Command.Text}" Command="{x:Static Controls:SmartNode.SetLocalReferenceType}" CommandParameter="{Binding}"/>
                                <MenuItem Header="{Binding RelativeSource={RelativeSource Self},Path=Command.Text}" Command="{x:Static Controls:SmartNode.SetGlobalReferenceType}" CommandParameter="{Binding}"/>-->
                                <MenuItem Header="{Binding RelativeSource={RelativeSource Self},Path=Command.Text}" Command="{Binding Rename}" CommandParameter="{Binding}"/>
                            </ContextMenu>
                        </Border.ContextMenu>
                        
                        <Grid IsHitTestVisible="true" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">                            
                            <Diagram:DragProvider x:Name="PART_DragProvider" Opacity="0" IsHitTestVisible="true" MeasurementUnits="{Binding RelativeSource={RelativeSource AncestorType={x:Type Diagram:DiagramView}}, Path=Page.MeasurementUnits, Mode=TwoWay}" />
                            <Diagram:Resizer x:Name="PART_Resizer" Visibility="Collapsed" IsHitTestVisible="true" />
                            <Path x:Name="PART_Shape" Stretch="Fill" IsHitTestVisible="false" Style="{TemplateBinding CustomPathStyle}" />
                            <ContentControl IsHitTestVisible="false" Style="{StaticResource ShinyContentPresenter}" Background="{TemplateBinding Background}" >
                                <StackPanel Orientation="Vertical" IsHitTestVisible="false" >
                                    <StackPanel IsHitTestVisible="false" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top">
                                        <Image x:Name="PART_GlobalReference" Visibility="Collapsed" Source="/Resources/Icons/world.png" Height="16" Width="16" />
                                        <Image x:Name="PART_LocalReference" Visibility="Collapsed" Source="/Resources/Icons/house.png" Height="16" Width="16" />
                                    </StackPanel>
                                    <ContentPresenter Visibility="Visible" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" ContentSource="Content" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                                </StackPanel>
                            </ContentControl>
                            <Diagram:LabelEditor x:Name="PART_LabelEditor" IsHitTestVisible="false" VerticalAlignment="{Binding Path=LabelVerticalAlignment, RelativeSource={RelativeSource FindAncestor , AncestorType={x:Type Diagram:Node}}, Mode=TwoWay}" HorizontalAlignment="{Binding Path=LabelHorizontalAlignment, RelativeSource={RelativeSource FindAncestor , AncestorType={x:Type Diagram:Node}}, Mode=TwoWay}" Visibility="{Binding Path=LabelVisibility, RelativeSource={RelativeSource FindAncestor , AncestorType={x:Type Diagram:Node}}, Mode=TwoWay}" Label="{Binding Path=Label, RelativeSource={RelativeSource FindAncestor , AncestorType={x:Type Diagram:Node}}, Mode=TwoWay}" />
                            <TextBlock x:Name="visitCounter" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="10,0,5,0" Text="{Binding Path=VisitCount, RelativeSource={RelativeSource FindAncestor , AncestorType={x:Type Diagram:Node}}, Mode=OneWay}" />
                            <Diagram:Rotator x:Name="PART_Rotator" Visibility="Collapsed" IsHitTestVisible="true" />
                            <Border x:Name="PART_ConectorOver" BorderThickness="2" Visibility="Collapsed" IsHitTestVisible="false" BorderBrush="Red" Background="Transparent" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        
                        <Trigger SourceName="visitCounter" Property="Text" Value="0">
                            <Setter TargetName="visitCounter" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" >
                            <Setter TargetName="PART_Resizer" Property="Visibility" Value="Visible" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=LabelVisibility}" Value="Visible">
                            <Setter TargetName="PART_LabelEditor" Property="Visibility" Value="Visible" />
                        </DataTrigger>

                        <Trigger Property="IsDragConnectionOver" Value="true">
                            <Setter TargetName="PART_ConectorOver" Property="Visibility" Value="Visible" />
                        </Trigger>

                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=NodeType}" Value="GlobalReference">
                            <Setter TargetName="PART_GlobalReference" Property="Visibility" Value="Visible" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=NodeType}" Value="LocalReference">
                            <Setter TargetName="PART_LocalReference" Property="Visibility" Value="Visible" />
                        </DataTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl Name="PART_Box" IsHitTestVisible="False" Style="{StaticResource ShinyContentPresenter}" Background="Orange">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top">
                            <Image Name="PART_GlobalReference" Source="/Resources/Icons/world.png" Height="16" Width="16" />
                            <Image Name="PART_LocalReference" Source="/Resources/Icons/house.png" Height="16" Width="16" />
                        </StackPanel>
                    </ContentControl>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}}" Value="Normal">
                            <Setter TargetName="PART_GlobalReference" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_LocalReference" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}}" Value="GlobalReference">
                            <Setter TargetName="PART_GlobalReference" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_LocalReference" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}}" Value="LocalReference">
                            <Setter TargetName="PART_GlobalReference" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_LocalReference" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Controls:SmartNode}},Path=IsVisited}" Value="True">
                            <Setter TargetName="PART_Box" Property="Background" Value="Green" />
                        </DataTrigger>
                        
                    </DataTemplate.Triggers>

                </DataTemplate>
            </Setter.Value>
        </Setter>-->
        
    </Style>    

</ResourceDictionary>