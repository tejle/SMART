<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:smart="clr-namespace:SMART.Core.Model;assembly=SMART.Core"
    xmlns:smartconverters="clr-namespace:SMART.Gui.Converters;assembly=SMART.Gui"
    xmlns:y="http://www.yworks.com/xml/yfiles-wpf/1.0/xaml" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">

    <smartconverters:VisitedConverter x:Key="visitedConverter" />

    <LinearGradientBrush x:Key="unvisitedBorderBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFF0000" Offset="0"/>
        <GradientStop Color="#FFFF8888" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="visitedBorderBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF00FF00" Offset="0"/>
        <GradientStop Color="#FF88FF88" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="currentBorderBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="SteelBlue" Offset="0"/>
        <GradientStop Color="SteelBlue" Offset="1"/>
    </LinearGradientBrush>

    <DataTemplate x:Key="VertexTemplate" DataType="{x:Type smart:Vertex}">
        <DataTemplate.Resources>
            <Storyboard x:Key="Timeline1">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="Timeline2">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </DataTemplate.Resources>
        <Border BorderBrush="#FFFFFFFF" BorderThickness="1,1,1,1" CornerRadius="4,4,4,4" x:Name="vertexBorder">
            <Border x:Name="border" Background="#7F000000" BorderBrush="#FF000000" BorderThickness="1,1,1,1" CornerRadius="4,4,4,4">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0.507*"/>
                        <RowDefinition Height="0.493*"/>
                    </Grid.RowDefinitions>
                    <Border Opacity="0" HorizontalAlignment="Stretch" x:Name="glow" Width="Auto" Grid.RowSpan="2" CornerRadius="4,4,4,4">
                        <Border.Background>
                            <RadialGradientBrush>
                                <RadialGradientBrush.RelativeTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1.702" ScaleY="2.243"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="0"/>
                                        <TranslateTransform X="-0.368" Y="-0.152"/>
                                    </TransformGroup>
                                </RadialGradientBrush.RelativeTransform>
                                <GradientStop Color="#B28DBDFF" Offset="0"/>
                                <GradientStop Color="#008DBDFF" Offset="1"/>
                            </RadialGradientBrush>
                        </Border.Background>
                    </Border>
                    <TextBox Grid.RowSpan="2" VerticalAlignment="Center" HorizontalAlignment="Center" Text="{Binding Path=Label}" BorderThickness="0" TextWrapping="NoWrap" Background="Transparent" />
                    <Border HorizontalAlignment="Stretch" Margin="0,0,0,0" x:Name="shine" Width="Auto" CornerRadius="4,4,0,0">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.494,0.889" StartPoint="0.494,0.028">
                                <GradientStop Color="#99FFFFFF" Offset="0"/>
                                <GradientStop Color="#33FFFFFF" Offset="1"/>
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>
                </Grid>
            </Border>
        </Border>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=Visited, Converter={StaticResource visitedConverter}}" Value="False">
                <Setter Property="Border.BorderBrush" TargetName="border" Value="{StaticResource unvisitedBorderBrush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Visited, Converter={StaticResource visitedConverter}}" Value="True">
                <Setter Property="Border.BorderBrush" TargetName="border" Value="{StaticResource visitedBorderBrush}" />
                <!--<Setter Property="Opacity" TargetName="shine" Value="0.4"/>
                <Setter Property="Background" TargetName="border" Value="#CC000000"/>
                <Setter Property="Visibility" TargetName="glow" Value="Hidden"/>-->
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsCurrent}" Value="True">                
                <DataTrigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource Timeline1}"/>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard x:Name="Timeline2_BeginStoryboard" Storyboard="{StaticResource Timeline2}"/>
                </DataTrigger.ExitActions>
                <Setter Property="Border.BorderBrush" TargetName="border" Value="{StaticResource currentBorderBrush}" />
                <!--<Setter Property="Border.Background" Value="LightSteelBlue" />-->
            </DataTrigger>
            <!--<Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" TargetName="shine" Value="0.4"/>
                <Setter Property="Background" TargetName="border" Value="#CC000000"/>
                <Setter Property="Visibility" TargetName="glow" Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource Timeline1}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="Timeline2_BeginStoryboard" Storyboard="{StaticResource Timeline2}"/>
                </Trigger.ExitActions>
            </Trigger>-->
        </DataTemplate.Triggers>


        <!--<Border x:Name="vertexBorder" BorderThickness="3" CornerRadius="3">
            <TextBox VerticalAlignment="Center" HorizontalAlignment="Center" Text="{Binding Path=Label}" BorderThickness="0" TextWrapping="NoWrap" Background="Transparent" />
            <Border.Style>
                <Style>
                    <Setter Property="Border.BorderBrush" >
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFFBB800" Offset="0"/>
                                <GradientStop Color="#FFFFE49D" Offset="1"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Border.Background" >
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFFBB800" Offset="0"/>
                                <GradientStop Color="#FFF7D886" Offset="1"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>

                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=Visited, Converter={StaticResource visitedConverter}}" Value="False">
                            <Setter Property="Border.BorderBrush" Value="{StaticResource unvisitedBorderBrush}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=Visited, Converter={StaticResource visitedConverter}}" Value="True">
                            <Setter Property="Border.BorderBrush" Value="{StaticResource visitedBorderBrush}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=IsCurrent}" Value="True">
                            <Setter Property="Border.BorderBrush" Value="{StaticResource currentBorderBrush}" />
                            <Setter Property="Border.Background" Value="LightSteelBlue" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
        </Border>-->
    </DataTemplate>

    <y:UIElementNodeStyle x:Key="VertexNodeStyle">
        <y:UIElementNodeStyle.OutlineShape>
            <Rectangle RadiusX="3" RadiusY="3"/>
        </y:UIElementNodeStyle.OutlineShape>
        <DataTemplate DataType="{x:Type y:UIElementNodeStyleDataContext}">
            <ContentPresenter Content="{Binding Path=UserTag}" ContentTemplate="{StaticResource VertexTemplate}">
                <ContentPresenter.BitmapEffect>
                    <DropShadowBitmapEffect Softness="0.2" Opacity="0.3" ShadowDepth="4"/>
                </ContentPresenter.BitmapEffect>
            </ContentPresenter>

        </DataTemplate>
    </y:UIElementNodeStyle>

    <y:UIElementLabelStyle x:Key="LabelStyle" AutoFlip="True" >
        <y:UIElementLabelStyle.OutlineShape>
            <Rectangle RadiusX="3" RadiusY="3" />
        </y:UIElementLabelStyle.OutlineShape>
        <DataTemplate DataType="{x:Type y:UIElementLabelStyleDataContext}">
            <Border CornerRadius="3" Padding="2" BorderThickness="1" BorderBrush="Gray" Background="#eeeeee">
                <TextBlock Foreground="Black" Text="{Binding Label.Text}"/>
            </Border>
        </DataTemplate>
    </y:UIElementLabelStyle>

    <!--<y:UIElementEdgeStyle x:Key="EdgeStyle">           
        <y:UIElementEdgeStyle.PathStyle>            
            <y:PolylineEdgeStyle>                
                <y:PolylineEdgeStyle.TargetArrow>   
                    <y:DefaultArrow></y:DefaultArrow.Create>
                </y:PolylineEdgeStyle.TargetArrow>
                <y:PolylineEdgeStyle.Pen>
                    <Pen Brush="Gray" Thickness="1"/>
                </y:PolylineEdgeStyle.Pen>
            </y:PolylineEdgeStyle>
        </y:UIElementEdgeStyle.PathStyle>
        <DataTemplate DataType="{x:Type y:UIElementEdgeStyleSegmentDataContext}">
            <Rectangle Fill="Gray">

            </Rectangle>
        </DataTemplate>
    </y:UIElementEdgeStyle>-->
</ResourceDictionary>
